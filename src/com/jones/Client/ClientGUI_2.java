package com.jones.Client;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.*;

public class ClientGUI_2 extends JFrame {
    private JPanel mainPanel;
    private JPanel ChatPanel;
    private JButton sendButton;
    private JTextField textField1;
    private JTextField textField2;
    private JPanel topPanel;
    private JPanel boardPanel;
    private JPanel setPanel;
    private JComboBox comboBox1;
    private JLabel placeLable;
    private JButton setButton;
    private JPanel thisisit;

    public ClientGUI_2(String title) {
        super(title);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(mainPanel);
        this.setTitle(title);
        this.setSize(800, 500);


    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        ChatPanel = new JPanel();
        ChatPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.add(ChatPanel, BorderLayout.EAST);
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setVerticalScrollBarPolicy(21);
        ChatPanel.add(scrollPane1, BorderLayout.CENTER);
        textField1 = new JTextField();
        textField1.setText("");
        scrollPane1.setViewportView(textField1);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        ChatPanel.add(panel1, BorderLayout.SOUTH);
        sendButton = new JButton();
        sendButton.setText("send");
        panel1.add(sendButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField2 = new JTextField();
        panel1.add(textField2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        topPanel = new JPanel();
        topPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.add(topPanel, BorderLayout.NORTH);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Source Code Pro", -1, 36, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setHorizontalAlignment(0);
        label1.setText("Battleship");
        topPanel.add(label1, BorderLayout.CENTER);
        boardPanel = new JPanel();
        boardPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.add(boardPanel, BorderLayout.CENTER);
        boardPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        boardPanel.add(panel2, BorderLayout.WEST);
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(100, 50, 100, 50), null, TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, null, null));
        thisisit = new JPanel();
        thisisit.setLayout(new BorderLayout(0, 0));
        thisisit.setPreferredSize(new Dimension(250, 250));
        thisisit.setRequestFocusEnabled(true);
        panel2.add(thisisit, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        boardPanel.add(panel3, BorderLayout.EAST);
        panel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(100, 50, 100, 50), null, TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, null, null));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        panel4.setPreferredSize(new Dimension(250, 250));
        panel4.setRequestFocusEnabled(true);
        panel3.add(panel4, BorderLayout.CENTER);
        setPanel = new JPanel();
        setPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.add(setPanel, BorderLayout.WEST);
        setPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(2, 2, 20, 0), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        placeLable = new JLabel();
        Font placeLableFont = this.$$$getFont$$$("Source Code Pro", -1, 16, placeLable.getFont());
        if (placeLableFont != null) placeLable.setFont(placeLableFont);
        placeLable.setHorizontalAlignment(0);
        placeLable.setText("Ship Ledger");
        setPanel.add(placeLable, BorderLayout.NORTH);
        setButton = new JButton();
        setButton.setText("Set");
        setPanel.add(setButton, BorderLayout.SOUTH);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        setPanel.add(panel5, BorderLayout.CENTER);
        comboBox1 = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Battleship");
        defaultComboBoxModel1.addElement("AirCraft");
        defaultComboBoxModel1.addElement("Crusier");
        defaultComboBoxModel1.addElement("Submarine");
        defaultComboBoxModel1.addElement("Destroyer");
        comboBox1.setModel(defaultComboBoxModel1);
        panel5.add(comboBox1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel5.add(spacer1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
